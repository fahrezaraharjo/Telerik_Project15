@model IEnumerable<Telerik_Project15.Models.Customer>
@{
    ViewBag.Title = "Customer List";
}
<style>
    .k-grid {
        margin: 0 auto;
        width: 80%;
        margin-top: 50px;
    }
</style>
<h2>Customer List</h2>

@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.CustomerID).Title("Customer ID").Width(100);
        columns.Bound(c => c.FirstName).Title("First Name").Width(150);
        columns.Bound(c => c.LastName).Title("Last Name").Width(150);
        columns.Bound(c => c.Email).Title("Email").Width(200);
        columns.Bound(c => c.Phone).Title("Phone").Width(150);
        columns.Command(command =>
        {
            command.Edit().Text("Edit").HtmlAttributes(new { @class = "k-button k-primary" });
            command.Destroy().Text("Delete").HtmlAttributes(new { @class = "k-button k-danger" });
        }).Width(200);
    })
    .ToolBar(toolbar => toolbar.Create().Text("Add New Customer").HtmlAttributes(new { @class = "k-button k-primary" }))
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(new[] { 5, 10, 20, 50 })
        .ButtonCount(5))
    .Sortable()
    .Filterable(filterable => filterable
        .Extra(false)
        .Operators(operators => operators
            .ForString(str => str.Clear()
                .StartsWith("Starts with")
                .IsEqualTo("Is equal to")
                .IsNotEqualTo("Is not equal to")
            )))
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(5)
        .Model(model => model.Id(c => c.CustomerID))
        .Create(update => update.Action("Create", "Customer"))
        .Read(read => read.Action("Index", "Customer"))
        .Update(update => update.Action("Edit", "Customer"))
        .Destroy(destroy => destroy.Action("Delete", "Customer"))
    )
)